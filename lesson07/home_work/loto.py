#!/usr/bin/python3

"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
	
Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87      
      16 49    55 77    88    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html

"""


# Решение 1
import chip
import card

print("Добро пожаловать в игру == Лото ==")
print("Пожалуйста подождите, идёт инициализация игровых объектов:\n")

user_card = card.Card("User")
computer_card = card.Card()

chip = chip.Chip()

ship_number = 0


def show_all_cards():
    user_card.show_card
    computer_card.show_card


def next_step():
    ship_number = next(chip.generate)
    print("Выпал бочонок №", ship_number)
    show_all_cards()
    return ship_number


print("Инициализация завершена: карточки игроков ->\n")

show_all_cards()

while True:
    user_choice = input("Для следующего броска введите 1, для выхода из игры введите Q:")

    if user_choice in ["Q", "q"]:
        break

    if user_choice == "1":

        if user_card.are_you_winner:
            print("Победил %UserName%!")
            break
        elif computer_card.are_you_winner:
            print("Победил Computer!")
            break

        ship_number = next_step()

        # Реализация игры компьютера
        index_is_exist_pc = computer_card.is_exist(ship_number)
        if index_is_exist_pc != -1:
            computer_card.cross_out_number(index_is_exist_pc)

        user_shot = input("Зачеркнуть бочонок на карте? Y - зачеркнуть N - продолжить")

        if user_shot in ["Y", "y"]:
            index_is_exist = user_card.is_exist(ship_number)
            if index_is_exist != -1:
                user_card.cross_out_number(index_is_exist)
                show_all_cards()
            else:
                print("Неверно! Конец игры!!!")
                break
        elif user_shot in ["N", "n"]:
            index_is_exist = user_card.is_exist(ship_number)
            if index_is_exist != -1:
                print("Номер бочёнка был в Вашей карте, Вы проиграли! Конец игры!!!")
                break
            else:
                continue
        else:
            break
